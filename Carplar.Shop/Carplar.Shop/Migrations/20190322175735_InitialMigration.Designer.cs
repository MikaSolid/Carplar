// <auto-generated />
using System;
using Carplar.Shop.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Carplar.Shop.Migrations
{
    [DbContext(typeof(Db))]
    [Migration("20190322175735_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Carplar.Shop.EntityFramework.Article", b =>
                {
                    b.Property<int>("ArticleId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArticleGroupId");

                    b.Property<DateTime>("Created");

                    b.Property<DateTime?>("Deleted");

                    b.Property<string>("Name");

                    b.HasKey("ArticleId");

                    b.HasIndex("ArticleGroupId");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("Carplar.Shop.EntityFramework.ArticleGroup", b =>
                {
                    b.Property<int>("ArticleGroupId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created");

                    b.Property<DateTime?>("Deleted");

                    b.Property<string>("Name");

                    b.HasKey("ArticleGroupId");

                    b.ToTable("ArticleGroups");
                });

            modelBuilder.Entity("Carplar.Shop.EntityFramework.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created");

                    b.Property<DateTime?>("Deleted");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Carplar.Shop.EntityFramework.Organization", b =>
                {
                    b.Property<int>("OrganizationId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created");

                    b.Property<DateTime?>("Deleted");

                    b.Property<int>("PartyId");

                    b.HasKey("OrganizationId");

                    b.HasIndex("PartyId");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("Carplar.Shop.EntityFramework.Party", b =>
                {
                    b.Property<int>("PartyId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created");

                    b.Property<DateTime?>("Deleted");

                    b.Property<int?>("PostalAddressId");

                    b.HasKey("PartyId");

                    b.HasIndex("PostalAddressId");

                    b.ToTable("Parties");
                });

            modelBuilder.Entity("Carplar.Shop.EntityFramework.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created");

                    b.Property<DateTime?>("Deleted");

                    b.Property<int>("PurchaseId");

                    b.HasKey("PaymentId");

                    b.HasIndex("PurchaseId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("Carplar.Shop.EntityFramework.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created");

                    b.Property<DateTime?>("DateOfBirth");

                    b.Property<DateTime?>("Deleted");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("MiddleName");

                    b.Property<int>("PartyId");

                    b.HasKey("PersonId");

                    b.HasIndex("PartyId");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("Carplar.Shop.EntityFramework.PostalAddress", b =>
                {
                    b.Property<int>("PostalAddressId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City");

                    b.Property<string>("HouseNumber");

                    b.Property<string>("IsoCountry");

                    b.Property<string>("Street");

                    b.HasKey("PostalAddressId");

                    b.ToTable("PostalAddresses");
                });

            modelBuilder.Entity("Carplar.Shop.EntityFramework.Purchase", b =>
                {
                    b.Property<int>("PurchaseId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created");

                    b.Property<int>("CustomerId");

                    b.Property<DateTime?>("Deleted");

                    b.Property<int>("ShipmentAddressId");

                    b.HasKey("PurchaseId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ShipmentAddressId");

                    b.ToTable("Purchases");
                });

            modelBuilder.Entity("Carplar.Shop.EntityFramework.PurchaseItem", b =>
                {
                    b.Property<int>("PurchaseItemId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created");

                    b.Property<DateTime?>("Deleted");

                    b.Property<decimal>("Price");

                    b.Property<decimal>("Quantity");

                    b.Property<int>("ShopItemId");

                    b.HasKey("PurchaseItemId");

                    b.HasIndex("ShopItemId");

                    b.ToTable("PurchaseItems");
                });

            modelBuilder.Entity("Carplar.Shop.EntityFramework.Shipment", b =>
                {
                    b.Property<int>("ShipmentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created");

                    b.Property<DateTime?>("Deleted");

                    b.Property<DateTime?>("EstimatedArrival");

                    b.Property<int>("PurchaseId");

                    b.Property<DateTime?>("Shipped");

                    b.HasKey("ShipmentId");

                    b.HasIndex("PurchaseId");

                    b.ToTable("Shipments");
                });

            modelBuilder.Entity("Carplar.Shop.EntityFramework.ShopItem", b =>
                {
                    b.Property<int>("ShopItemId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArticleId");

                    b.Property<DateTime>("Created");

                    b.Property<DateTime?>("Deleted");

                    b.Property<DateTime>("ValidFrom");

                    b.Property<DateTime?>("ValidTo");

                    b.HasKey("ShopItemId");

                    b.HasIndex("ArticleId");

                    b.ToTable("ShopItems");
                });

            modelBuilder.Entity("Carplar.Shop.EntityFramework.Article", b =>
                {
                    b.HasOne("Carplar.Shop.EntityFramework.ArticleGroup", "ArticleGroup")
                        .WithMany()
                        .HasForeignKey("ArticleGroupId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Carplar.Shop.EntityFramework.Organization", b =>
                {
                    b.HasOne("Carplar.Shop.EntityFramework.Party", "Party")
                        .WithMany()
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Carplar.Shop.EntityFramework.Party", b =>
                {
                    b.HasOne("Carplar.Shop.EntityFramework.PostalAddress", "PostalAddress")
                        .WithMany()
                        .HasForeignKey("PostalAddressId");
                });

            modelBuilder.Entity("Carplar.Shop.EntityFramework.Payment", b =>
                {
                    b.HasOne("Carplar.Shop.EntityFramework.Purchase", "Purchase")
                        .WithMany()
                        .HasForeignKey("PurchaseId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Carplar.Shop.EntityFramework.Person", b =>
                {
                    b.HasOne("Carplar.Shop.EntityFramework.Party", "Party")
                        .WithMany()
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Carplar.Shop.EntityFramework.Purchase", b =>
                {
                    b.HasOne("Carplar.Shop.EntityFramework.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Carplar.Shop.EntityFramework.PostalAddress", "ShipmentAddress")
                        .WithMany()
                        .HasForeignKey("ShipmentAddressId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Carplar.Shop.EntityFramework.PurchaseItem", b =>
                {
                    b.HasOne("Carplar.Shop.EntityFramework.ShopItem", "ShopItem")
                        .WithMany()
                        .HasForeignKey("ShopItemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Carplar.Shop.EntityFramework.Shipment", b =>
                {
                    b.HasOne("Carplar.Shop.EntityFramework.Purchase", "Purchase")
                        .WithMany()
                        .HasForeignKey("PurchaseId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Carplar.Shop.EntityFramework.ShopItem", b =>
                {
                    b.HasOne("Carplar.Shop.EntityFramework.Article", "Article")
                        .WithMany()
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
